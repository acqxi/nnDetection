
# @package __global__
defaults:
  - augmentation: base_more

module: RetinaUNetV001InstSeg
predictor: BoxPredictorSelective

plan: D3V001_3d
planner: D3V001

augment_cfg:
  augmentation: ${augmentation}
  num_train_batches_per_epoch: ${trainer_cfg.num_train_batches_per_epoch}
  num_val_batches_per_epoch: ${trainer_cfg.num_val_batches_per_epoch}
  dataloader: "DataLoader{}DOffset"
  oversample_foreground_percent: 0.5
  dataloader_kwargs: {}
  num_threads: ${oc.env:det_num_threads, "12"}
  num_cached_per_thread: 2
  multiprocessing: True
  batch_size: 1

trainer_cfg:
  gpus: 1
  accelerator:
  precision: 32
  amp_backend: native
  amp_level: O1
  deterministic: True
  benchmark: False
  monitor_key: "mAP_IoU_0.10_0.50_0.05_MaxDet_100"
  monitor_mode: "max"
  max_num_epochs: 50
  num_train_batches_per_epoch: 2500
  num_val_batches_per_epoch: 100
  initial_lr: 0.0001
  sgd_momentum: 0.9
  sgd_nesterov: True
  weight_decay: 1.e-4
  warm_iterations: 500
  warm_lr: 1.e-8
  poly_gamma: 0.9
  swa_epochs: 10

model_cfg:
  encoder_kwargs: {}
  decoder_kwargs:
    min_out_channels: 8
    upsampling_mode: "transpose"
    num_lateral: 1
    norm_lateral: False
    activation_lateral: False
    num_out: 1
    norm_out: False
    activation_out: False
  head_kwargs: {}
  head_classifier_kwargs:
    num_convs: 1
    norm_channels_per_group: 16
    norm_affine: True
    reduction: "mean"
    loss_weight: 0.1
    prior_prob: 0.01
  head_regressor_kwargs:
    num_convs: 1
    norm_channels_per_group: 16
    norm_affine: True
    reduction: "sum"
    loss_weight: 0.1
    learn_scale: True
  head_sampler_kwargs:
    batch_size_per_image: 16
    positive_fraction: 0.25
    pool_size: 10
    min_neg: 1
  segmenter_kwargs:
    dice_kwargs:
      batch_dice: True
  matcher_kwargs:
    num_candidates: 4
    center_in_gt: False
  plan_arch_overwrites:
    patch_size: [48, 256, 256]
  plan_anchors_overwrites: {}
